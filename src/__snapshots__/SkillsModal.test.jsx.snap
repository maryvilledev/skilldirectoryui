exports[`<SkillsModal /> matches the stored snapshot 1`] = `
ShallowWrapper {
  "complexSelector": ComplexSelector {
    "buildPredicate": [Function],
    "childrenOfNode": [Function],
    "findWhereUnwrapped": [Function],
  },
  "length": 1,
  "node": <form
    onSubmit={[Function]}>
    <div>
        Name: 
        <input
            name="skill_name"
            onChange={[Function]}
            type="text"
            value="" />
    </div>
    <div>
        Skill Type: 
        <Select
            addLabelText="Add \"{label}\"?"
            arrowRenderer={[Function]}
            autosize={true}
            backspaceRemoves={true}
            backspaceToRemoveMessage="Press backspace to remove {label}"
            clearAllText="Clear all"
            clearValueText="Clear value"
            clearable={true}
            delimiter=","
            disabled={false}
            escapeClearsValue={true}
            filterOptions={[Function]}
            ignoreAccents={true}
            ignoreCase={true}
            inputProps={Object {}}
            isLoading={false}
            joinValues={false}
            labelKey="label"
            matchPos="any"
            matchProp="any"
            menuBuffer={0}
            menuRenderer={[Function]}
            multi={false}
            name="skill_type"
            noResultsText="No results found"
            onBlurResetsInput={true}
            onChange={[Function]}
            onCloseResetsInput={true}
            openAfterFocus={false}
            optionComponent={[Function]}
            options={
                Array [
                    Object {
                      "label": "Compiled",
                      "value": "compiled",
                    },
                    Object {
                      "label": "Scripted",
                      "value": "scripted",
                    },
                    Object {
                      "label": "Database",
                      "value": "database",
                    },
                    Object {
                      "label": "Orchestration",
                      "value": "orchestration",
                    },
                  ]
            }
            pageSize={5}
            placeholder="Select..."
            required={false}
            scrollMenuIntoView={true}
            searchable={true}
            simpleValue={false}
            tabSelectsValue={true}
            value=""
            valueComponent={[Function]}
            valueKey="value" />
    </div>
    <button
        type="submit">
        Save
    </button>
</form>,
  "nodes": Array [
    <form
      onSubmit={[Function]}>
      <div>
            Name: 
            <input
                  name="skill_name"
                  onChange={[Function]}
                  type="text"
                  value="" />
      </div>
      <div>
            Skill Type: 
            <Select
                  addLabelText="Add \"{label}\"?"
                  arrowRenderer={[Function]}
                  autosize={true}
                  backspaceRemoves={true}
                  backspaceToRemoveMessage="Press backspace to remove {label}"
                  clearAllText="Clear all"
                  clearValueText="Clear value"
                  clearable={true}
                  delimiter=","
                  disabled={false}
                  escapeClearsValue={true}
                  filterOptions={[Function]}
                  ignoreAccents={true}
                  ignoreCase={true}
                  inputProps={Object {}}
                  isLoading={false}
                  joinValues={false}
                  labelKey="label"
                  matchPos="any"
                  matchProp="any"
                  menuBuffer={0}
                  menuRenderer={[Function]}
                  multi={false}
                  name="skill_type"
                  noResultsText="No results found"
                  onBlurResetsInput={true}
                  onChange={[Function]}
                  onCloseResetsInput={true}
                  openAfterFocus={false}
                  optionComponent={[Function]}
                  options={
                        Array [
                              Object {
                                "label": "Compiled",
                                "value": "compiled",
                              },
                              Object {
                                "label": "Scripted",
                                "value": "scripted",
                              },
                              Object {
                                "label": "Database",
                                "value": "database",
                              },
                              Object {
                                "label": "Orchestration",
                                "value": "orchestration",
                              },
                            ]
                  }
                  pageSize={5}
                  placeholder="Select..."
                  required={false}
                  scrollMenuIntoView={true}
                  searchable={true}
                  simpleValue={false}
                  tabSelectsValue={true}
                  value=""
                  valueComponent={[Function]}
                  valueKey="value" />
      </div>
      <button
            type="submit">
            Save
      </button>
</form>,
  ],
  "options": Object {},
  "renderer": ReactShallowRenderer {
    "_instance": ShallowComponentWrapper {
      "_calledComponentWillUnmount": false,
      "_compositeType": 0,
      "_context": Object {},
      "_currentElement": <SkillForm />,
      "_debugID": 20,
      "_hostContainerInfo": null,
      "_hostParent": null,
      "_instance": SkillForm {
        "_reactInternalInstance": [Circular],
        "context": Object {},
        "logChange": [Function],
        "onChange": [Function],
        "onSubmit": [Function],
        "props": Object {},
        "refs": Object {},
        "state": Object {
          "skill_name": "",
          "skill_type": "",
        },
        "updater": Object {
          "enqueueCallback": [Function],
          "enqueueCallbackInternal": [Function],
          "enqueueElementInternal": [Function],
          "enqueueForceUpdate": [Function],
          "enqueueReplaceState": [Function],
          "enqueueSetState": [Function],
          "isMounted": [Function],
          "validateCallback": [Function],
        },
      },
      "_mountOrder": 5,
      "_pendingCallbacks": null,
      "_pendingElement": null,
      "_pendingForceUpdate": false,
      "_pendingReplaceState": false,
      "_pendingStateQueue": null,
      "_renderedComponent": NoopInternalComponent {
        "_currentElement": <form
          onSubmit={[Function]}>
          <div>
                    Name: 
                    <input
                              name="skill_name"
                              onChange={[Function]}
                              type="text"
                              value="" />
          </div>
          <div>
                    Skill Type: 
                    <Select
                              addLabelText="Add \"{label}\"?"
                              arrowRenderer={[Function]}
                              autosize={true}
                              backspaceRemoves={true}
                              backspaceToRemoveMessage="Press backspace to remove {label}"
                              clearAllText="Clear all"
                              clearValueText="Clear value"
                              clearable={true}
                              delimiter=","
                              disabled={false}
                              escapeClearsValue={true}
                              filterOptions={[Function]}
                              ignoreAccents={true}
                              ignoreCase={true}
                              inputProps={Object {}}
                              isLoading={false}
                              joinValues={false}
                              labelKey="label"
                              matchPos="any"
                              matchProp="any"
                              menuBuffer={0}
                              menuRenderer={[Function]}
                              multi={false}
                              name="skill_type"
                              noResultsText="No results found"
                              onBlurResetsInput={true}
                              onChange={[Function]}
                              onCloseResetsInput={true}
                              openAfterFocus={false}
                              optionComponent={[Function]}
                              options={
                                        Array [
                                                  Object {
                                                    "label": "Compiled",
                                                    "value": "compiled",
                                                  },
                                                  Object {
                                                    "label": "Scripted",
                                                    "value": "scripted",
                                                  },
                                                  Object {
                                                    "label": "Database",
                                                    "value": "database",
                                                  },
                                                  Object {
                                                    "label": "Orchestration",
                                                    "value": "orchestration",
                                                  },
                                                ]
                              }
                              pageSize={5}
                              placeholder="Select..."
                              required={false}
                              scrollMenuIntoView={true}
                              searchable={true}
                              simpleValue={false}
                              tabSelectsValue={true}
                              value=""
                              valueComponent={[Function]}
                              valueKey="value" />
          </div>
          <button
                    type="submit">
                    Save
          </button>
</form>,
        "_debugID": 21,
        "_renderedOutput": <form
          onSubmit={[Function]}>
          <div>
                    Name: 
                    <input
                              name="skill_name"
                              onChange={[Function]}
                              type="text"
                              value="" />
          </div>
          <div>
                    Skill Type: 
                    <Select
                              addLabelText="Add \"{label}\"?"
                              arrowRenderer={[Function]}
                              autosize={true}
                              backspaceRemoves={true}
                              backspaceToRemoveMessage="Press backspace to remove {label}"
                              clearAllText="Clear all"
                              clearValueText="Clear value"
                              clearable={true}
                              delimiter=","
                              disabled={false}
                              escapeClearsValue={true}
                              filterOptions={[Function]}
                              ignoreAccents={true}
                              ignoreCase={true}
                              inputProps={Object {}}
                              isLoading={false}
                              joinValues={false}
                              labelKey="label"
                              matchPos="any"
                              matchProp="any"
                              menuBuffer={0}
                              menuRenderer={[Function]}
                              multi={false}
                              name="skill_type"
                              noResultsText="No results found"
                              onBlurResetsInput={true}
                              onChange={[Function]}
                              onCloseResetsInput={true}
                              openAfterFocus={false}
                              optionComponent={[Function]}
                              options={
                                        Array [
                                                  Object {
                                                    "label": "Compiled",
                                                    "value": "compiled",
                                                  },
                                                  Object {
                                                    "label": "Scripted",
                                                    "value": "scripted",
                                                  },
                                                  Object {
                                                    "label": "Database",
                                                    "value": "database",
                                                  },
                                                  Object {
                                                    "label": "Orchestration",
                                                    "value": "orchestration",
                                                  },
                                                ]
                              }
                              pageSize={5}
                              placeholder="Select..."
                              required={false}
                              scrollMenuIntoView={true}
                              searchable={true}
                              simpleValue={false}
                              tabSelectsValue={true}
                              value=""
                              valueComponent={[Function]}
                              valueKey="value" />
          </div>
          <button
                    type="submit">
                    Save
          </button>
</form>,
      },
      "_renderedNodeType": 0,
      "_rootNodeID": 0,
      "_topLevelWrapper": null,
      "_updateBatchNumber": null,
      "_warnedAboutRefsInRender": false,
    },
    "getRenderOutput": [Function],
    "render": [Function],
  },
  "root": [Circular],
  "unrendered": <SkillForm />,
}
`;
